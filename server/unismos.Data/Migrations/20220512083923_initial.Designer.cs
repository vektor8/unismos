// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using unismos.Data;

#nullable disable

namespace unismos.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220512083923_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StudentTax", b =>
                {
                    b.Property<Guid>("PayersId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TaxesPaidId")
                        .HasColumnType("uuid");

                    b.HasKey("PayersId", "TaxesPaidId");

                    b.HasIndex("TaxesPaidId");

                    b.ToTable("StudentTax");
                });

            modelBuilder.Entity("unismos.Common.Entities.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TeachingId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeachingId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("unismos.Common.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("unismos.Common.Entities.Tax", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("unismos.Common.Entities.Teaching", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("ExamDate")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Teachings");
                });

            modelBuilder.Entity("unismos.Common.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<int>("UserType");
                });

            modelBuilder.Entity("unismos.Common.Entities.Professor", b =>
                {
                    b.HasBaseType("unismos.Common.Entities.User");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("unismos.Common.Entities.Secretary", b =>
                {
                    b.HasBaseType("unismos.Common.Entities.User");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("unismos.Common.Entities.Student", b =>
                {
                    b.HasBaseType("unismos.Common.Entities.User");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("StudentTax", b =>
                {
                    b.HasOne("unismos.Common.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("PayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("unismos.Common.Entities.Tax", null)
                        .WithMany()
                        .HasForeignKey("TaxesPaidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("unismos.Common.Entities.Enrollment", b =>
                {
                    b.HasOne("unismos.Common.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("unismos.Common.Entities.Teaching", "Teaching")
                        .WithMany()
                        .HasForeignKey("TeachingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teaching");
                });

            modelBuilder.Entity("unismos.Common.Entities.Teaching", b =>
                {
                    b.HasOne("unismos.Common.Entities.Professor", "Professor")
                        .WithMany("Teachings")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("unismos.Common.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("unismos.Common.Entities.Professor", b =>
                {
                    b.Navigation("Teachings");
                });

            modelBuilder.Entity("unismos.Common.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
